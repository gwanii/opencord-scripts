
{#
copyright 2017-present Open Networking Foundation

licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
you may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
wITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
see the License for the specific language governing permissions and
limitations under the License.
#}


tosca_definitions_version: tosca_simple_yaml_1_0

description: created by platform-install, need to add M-CORD services later

imports:
   - custom_types/xos.yaml
   - custom_types/slice.yaml
   - custom_types/site.yaml
   - custom_types/image.yaml
   - custom_types/flavor.yaml
   - custom_types/network.yaml
   - custom_types/onosservice.yaml
   - custom_types/networkslice.yaml
   - custom_types/vmmeservice.yaml
   - custom_types/vmmevendor.yaml
   - custom_types/vmmetenant.yaml
   - custom_types/vpgwservice.yaml
   - custom_types/vpgwvendor.yaml
   - custom_types/vpgwtenant.yaml
   - custom_types/vsgwservice.yaml
   - custom_types/vsgwvendor.yaml
   - custom_types/vsgwtenant.yaml

topology_template:
  node_templates:

# site, image, fully created in deployment.yaml
    {{ site_name }}:
      type: tosca.nodes.Site
      properties:
        must-exist: true
        name: {{ site_name }}

    m1.small:
      type: tosca.nodes.Flavor
      properties:
        name: m1.small
        must-exist: true
    m1.large:
      type: tosca.nodes.Flavor
      properties:
        name: m1.large
        must-exist: true
    m1.medium:
      type: tosca.nodes.Flavor
      properties:
        name: m1.medium
        must-exist: true
    m1.xlarge:
      type: tosca.nodes.Flavor
      properties:
        name: m1.xlarge
        must-exist: true

    image-vmme:
      type: tosca.nodes.Image
      properties:
        name: image-vmme

    image-vsgw:
      type: tosca.nodes.Image
      properties:
        name: image-vsgw

    image-vpgw:
      type: tosca.nodes.Image
      properties:
        name: image-vpgw

# management networks, fully created in management-net.yaml
    management:
      type: tosca.nodes.Network
      properties:
        must-exist: true
        name: management

{% if use_management_hosts %}
    management_hosts:
      type: tosca.nodes.Network
      properties:
        must-exist: true
        name: management_hosts
{% endif %}

# epc_network is for connectivity between VMs, fully created in epc-net.yaml
    epc_network:
      type: tosca.nodes.Network
      properties:
        must-exist: true
        name: epc_network

# flat_network is for connectivity between VM inside cord and server outside, fully created in flat-net.yaml
#    flat_network:
#      type: tosca.nodes.Network
#      properties:
#        must-exist: true
#        name: flat_network

# ONOS_CORD, fully created in vtn.yaml
    service#ONOS_CORD:
      type: tosca.nodes.ONOSService
      properties:
        must-exist: true
        name: ONOS_CORD

# ONOS_Fabric, fully created in fabric.yaml
    service#ONOS_Fabric:
      type: tosca.nodes.ONOSService
      properties:
        must-exist: true
        name: ONOS_Fabric

# vMME Services
    service#vmme:
      type: tosca.nodes.VMMEService
      properties:
          name: vmme
          kind: vEPC
          public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
          private_key_fn: /opt/xos/services/vmme/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    {{ site_name }}_vmme:
      description: MME slice
      type: tosca.nodes.Slice
      properties:
          name: {{ site_name }}_vmme
          default_isolation: vm
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.BelongsToOne
          - service:
              node: service#vmme
              relationship: tosca.relationships.BelongsToOne
          - default_image:
              node: image-vmme
              relationship: tosca.relationships.BelongsToOne
          - default_flavor:
              node: m1.large
              relationship: tosca.relationships.BelongsToOne

    radisys_mme:
      type: tosca.nodes.VMMEVendor
      properties:
        name: mme
      requirements:
        - image:
            node: image-vmme
            relationship: tosca.relationships.BelongsToOne
        - flavor:
            node: m1.large
            relationship: tosca.relationships.BelongsToOne

    serviceinstance#vmme_instance:
      type: tosca.nodes.VMMETenant
      properties:
        name: vmme_tenant1
      requirements:
        - vmme_vendor:
            node: radisys_mme
            relationship: tosca.relationships.BelongsToOne
        - owner:
            node: service#vmme
            relationship: tosca.relationships.BelongsToOne

    vmme_slice_management_network:
      type: tosca.nodes.NetworkSlice
      requirements:
        - network:
            node: management
            relationship: tosca.relationships.BelongsToOne
        - slice:
            node: {{ site_name }}_vmme
            relationship: tosca.relationships.BelongsToOne

    vmme_slice_epc_network:
      type: tosca.nodes.NetworkSlice
      requirements:
        - network:
            node: epc_network
            relationship: tosca.relationships.BelongsToOne
        - slice:
            node: {{ site_name }}_vmme
            relationship: tosca.relationships.BelongsToOne

#vSGW Service
    service#vsgw:
      type: tosca.nodes.VSGWService
      properties:
          name: vsgw
          kind: vEPC
          public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
          private_key_fn: /opt/xos/services/vsgw/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub


    {{ site_name }}_vsgw:
      description: Server gateway slice
      type: tosca.nodes.Slice
      properties:
          name: {{ site_name }}_vsgw
          default_isolation: vm
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.BelongsToOne
          - service:
              node: service#vsgw
              relationship: tosca.relationships.BelongsToOne
          - default_image:
              node: image-vsgw
              relationship: tosca.relationships.BelongsToOne
          - default_flavor:
              node: m1.large
              relationship: tosca.relationships.BelongsToOne

    radisys_sgw:
      type: tosca.nodes.VSGWVendor
      properties:
        name: sgw
      requirements:
        - image:
            node: image-vsgw
            relationship: tosca.relationships.BelongsToOne
        - flavor:
            node: m1.large
            relationship: tosca.relationships.BelongsToOne

    serviceinstance#vsgw_instance:
      type: tosca.nodes.VSGWTenant
      properties:
        name: vsgw_instance1
      requirements:
        - vsgw_vendor:
            node: radisys_sgw
            relationship: tosca.relationships.BelongsToOne
        - owner:
            node: service#vsgw
            relationship: tosca.relationships.BelongsToOne

    vsgw_slice_management_network:
      type: tosca.nodes.NetworkSlice
      requirements:
        - network:
            node: management
            relationship: tosca.relationships.BelongsToOne
        - slice:
            node: {{ site_name }}_vsgw
            relationship: tosca.relationships.BelongsToOne

    vsgw_slice_epc_network:
      type: tosca.nodes.NetworkSlice
      requirements:
        - network:
            node: epc_network
            relationship: tosca.relationships.BelongsToOne
        - slice:
            node: {{ site_name }}_vsgw
            relationship: tosca.relationships.BelongsToOne

#vPGW Service
    service#vpgw:
      type: tosca.nodes.VPGWService
      properties:
          name: vpgw
          kind: vEPC
          public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
          private_key_fn: /opt/xos/services/vpgw/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    {{ site_name }}_vpgw:
      description: PDN gateway slice
      type: tosca.nodes.Slice
      properties:
          name: {{ site_name }}_vpgw
          default_isolation: vm
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.BelongsToOne
          - service:
              node: service#vpgw
              relationship: tosca.relationships.BelongsToOne
          - default_image:
              node: image-vpgw
              relationship: tosca.relationships.BelongsToOne
          - default_flavor:
              node: m1.large
              relationship: tosca.relationships.BelongsToOne

    radisys_pgw:
      type: tosca.nodes.VPGWVendor
      properties:
        name: pgw
      requirements:
        - image:
            node: image-vpgw
            relationship: tosca.relationships.BelongsToOne
        - flavor:
            node: m1.large
            relationship: tosca.relationships.BelongsToOne
   
    serviceinstance#vpgw_instance:
      type: tosca.nodes.VPGWTenant
      properties:
        name: vpgw_instance1
      requirements:
        - vpgw_vendor:
            node: radisys_pgw
            relationship: tosca.relationships.BelongsToOne
        - owner:
            node: service#vpgw
            relationship: tosca.relationships.BelongsToOne
    
    vpgw_slice_management_network:
      type: tosca.nodes.NetworkSlice
      requirements:
        - network:
            node: management
            relationship: tosca.relationships.BelongsToOne
        - slice:
            node: {{ site_name }}_vpgw
            relationship: tosca.relationships.BelongsToOne

    vpgw_slice_epc_network:
      type: tosca.nodes.NetworkSlice
      requirements:
        - network:
            node: epc_network
            relationship: tosca.relationships.BelongsToOne
        - slice:
            node: {{ site_name }}_vpgw
            relationship: tosca.relationships.BelongsToOne
